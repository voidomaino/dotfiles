# set monitor/display 
monitor = , preferred, auto, auto

# Execute your favorite apps at launch
exec-once = waybar
exec-once = fcitx5 -d

# Some default env vars.
env = XCURSOR_SIZE,24
env = QT_QPA_PLATFORMTHEME,qt5ct # change to qt6ct if you have that

# For all categories, see https://wiki.hyprland.org/Configuring/Variables/
input {
    kb_layout = us
    kb_variant =
    kb_model =
    kb_options =
    kb_rules =

    follow_mouse = 1

    touchpad {
        natural_scroll = false
    }

    sensitivity = 0 # -1.0 - 1.0, 0 means no modification.
}

# SET VARIABLES
general { # gap, border, layout, cursor, resize

    #gaps_in =          # int = 5   # gaps between windows
    #gaps_out =         # int = 20  # gaps between windows and monitor edges
    #gaps_workspaces =  # int = 0   # gaps between workspaces; stacks with gaps_out

    #border_size = 1                                        # int = 1       # size of the border around windows
    #no_border_on_floating =                                # bool = false  # disable floating windows' border
    col.inactive_border = rgba(595959aa)                    # gradient      # border color for inactive windows
    col.active_border = rgba(33ccffee) rgba(00ff99ee) 45deg # gradient      # border color for active windows
    #col.nogroup_border =                                   # gradient      # border color for ungroupable windows
    #col.nogroup_border_active =                            # gradient      # border color for active ungroupable windows

    layout = dwindle # str = dwindle/master # two layouts to choose from

    #allow_tearing = # bool = false # master switch for allowing tearing to occur. See the Tearing page.	

    #sensitivity =              # float = 1.0   # mouse sensitivity; see input:sensitivity
    #apply_sens_to_raw          # bool = false  # if on, will also apply the sensitivity to raw mouse output (e.g. sensitivity in games) NOTICE: really not recommended.	
    #cursor_inactive_timeout =  # int = 0       # hide cursor in seconds
    #no_cursor_warps =          # bool = false  # if true, will not warp the cursor in many cases (focusing, keybinds, etc)	

    #no_focus_fallback # bool = false # if true, will not fall back to the next available window when moving focus in a direction where no window was found	

    resize_on_border = true     # bool = false  # enables resizing windows by clicking and dragging on borders and gaps	
    #hover_icon_on_border       # bool = true   # show a cursor icon when hovering over borders, only used when general:resize_on_border is on.	
    #extend_border_grab_area    # int = 15      # extends the area around the border where you can click and drag on, only used when general:resize_on_border is on.	
    #resize_corner              # int = 0       # force floating windows to use a specific corner when being resized (1-4 going clockwise from top left, 0 to disable)	

}

decoration { # shadow, opacity, dim

    rounding = 10 # int = 0 # rounded corners’ radius (in layout px)

    blur {
        enabled = true
        size = 3
        passes = 1
    }

    #drop_shadow =              # bool = true               # enable drop shadows on windows
    #shadow_range =             # int = 4                   # Shadow range (“size”) in layout px
    #shadow_render_power =      # int [1 - 4] = 3           # in what power to render the falloff (more power, the faster the falloff)
    #shadow_ignore_window =     # bool = true               # if true, the shadow will not be rendered behind the window itself, only around it.	
    col.shadow = rgba(1a1a1aee) # color = 0xee1a1a1a        # shadow’s color. Alpha dictates shadow’s opacity.
    #col.shadow_inactive        # color unset               # inactive shadow color. (if not set, will fall back to col.shadow)	
    #shadow_offset              # vec2 = [0, 0]             # shadow’s rendering offset.	
    #shadow_scale               # float [0.0 - 1.0] = 1.0   # shadow’s scale. 

    #active_opacity =       # float [0.0 - 1.0] = 1.0   # opacity of active windows. 
    #inactive_opacity =     # float [0.0 - 1.0] = 1.0   # opacity of inactive windows. 
    #fullscreen_opacity	=   # float [0.0 - 1.0] = 1.0   # opacity of fullscreen windows. 

    #dim_inactive   # bool = false              # enables dimming of inactive windows	
    #dim_strength   # float [0.0 - 1.0] = 0.5   # how much inactive windows should be dimmed 
    #dim_special    # float [0.0 - 1.0] = 0.2   # how much to dim the rest of the screen by when a special workspace is open. 
    #dim_around     # float [0.0 - 1.0] = 0.4   # how much the dimaround window rule should dim by. 
    #screen_shader  # str [[Empty]]             # a path to a custom shader to be applied at the end of rendering. See examples/screenShader.frag for an example.	

}

animations {
    enabled = true

    bezier = myBezier, 0.05, 0.9, 0.1, 1.05

    animation = windows, 1, 7, myBezier
    animation = windowsOut, 1, 7, default, popin 80%
    animation = border, 1, 10, default
    animation = borderangle, 1, 8, default
    animation = fade, 1, 7, default
    animation = workspaces, 1, 6, default
}

dwindle {
    pseudotile = true 
    preserve_split = true 
}

master {
}

gestures {
    workspace_swipe = false
}

misc {
    force_default_wallpaper = -1 # Set to 0 or 1 to disable the anime mascot wallpapers
}

device {
    name = epic-mouse-v1
    sensitivity = -0.5
}

windowrulev2 = suppressevent maximize, class:.* 

$mainMod = Super

$terminal = alacritty
$fileManager = alacritty -e ranger
$menu = tofi-drun --drun-launch=true
$screenshot = grim -g "$(slurp)" ~/Pictures/screenshot-$(date +%F-%H%M%S).png

bind = $mainMod,        RETURN, exec, $terminal
bind = $mainMod SHIFT,  E,      exit,
bind = $mainMod,        E,      exec, $fileManager
bind = $mainMod SHIFT,  P,      exec, $screenshot
bind = $mainMod,        O,      exec, $menu
bind = $mainMod SHIFT,  Q,      killactive
bind = $mainMod,        F,      fullscreen 
bind = $mainMod SHIFT,  SPACE,  togglefloating
bind = $mainMod,        P,      pseudo, # dwindle
bind = $mainMod,        V,      togglesplit, # dwindle

# Move focus with mainMod + arrow keys
bind = $mainMod, h, movefocus, l
bind = $mainMod, j, movefocus, d
bind = $mainMod, k, movefocus, u
bind = $mainMod, l, movefocus, r

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Example special workspace (scratchpad)
bind = $mainMod, S, togglespecialworkspace, magic
bind = $mainMod SHIFT, S, movetoworkspace, special:magic

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow
